// Generated by CoffeeScript 1.10.0
(function() {
  exports.downloadBlob = function(blob, filename) {
    var link;
    link = document.createElement('a');
    document.body.appendChild(link);
    link.setAttribute('href', window.URL.createObjectURL(blob));
    link.setAttribute('download', filename);
    link.setAttribute('target', '_parent');
    link.click();
    return document.body.removeChild(link);
  };

  exports.downloadBlobJson = function(data, name) {
    var blob, text;
    if (name == null) {
      name = 'data';
    }
    if (!/\.json$/.test(name)) {
      name = name + '.json';
    }
    text = JSON.stringify(data);
    blob = new Blob([text], {
      type: 'application/json'
    });
    return exports.downloadBlob(blob, name);
  };

  exports.upload = function(cb) {
    var input, removeInput, removed;
    input = document.createElement('input');
    input.type = 'file';
    input.style.display = 'none';
    document.body.appendChild(input);
    removed = false;
    removeInput = function() {
      if (removed) {
        return;
      }
      if (input != null ? input.parentNode : void 0) {
        document.body.removeChild(input);
      }
      return removed = true;
    };
    input.addEventListener('change', function() {
      var file, name, reader, ref;
      file = (ref = input.files) != null ? ref[0] : void 0;
      if (!file) {
        removeInput();
        return typeof cb === "function" ? cb('No file selected') : void 0;
      }
      name = file.name;
      reader = new FileReader();
      reader.onload = (function(_this) {
        return function() {
          var text;
          text = reader.result;
          removeInput();
          return typeof cb === "function" ? cb(null, text, name) : void 0;
        };
      })(this);
      return reader.readAsText(file);
    });
    return input.click();
  };

}).call(this);
