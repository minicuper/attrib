_formatWoTrailingZeros = (n) ->
  n = parseFloat(n)
  return if isNaN(n)
  n = n.toFixed(2)
  n = ('' + n).replace(/\d(?=(\d{3})+(\.|$))/g, '$&,')
  n = n.replace /\.00$/, ''
  n.replace /\.(.)0$/, '.$1'

isNumber = (n) -> !isNaN(parseFloat(n)) && isFinite(n)

_formatD3 = (value) ->
  d3 = require 'd3'
  d3.format('.3s')(value).replace('k', 'K')

# TODO: Implement real format function
# Format string
exports.f = (value, format, empty) ->
  return '' unless value? or empty
  return value unless isNumber(value)
  switch format
    when 's' then _formatD3(value)
    when 'percent' then _formatWoTrailingZeros(value * 100) + '%'
    when 'dollar' then '$' + _formatWoTrailingZeros(value)
    when '%.1d' then parseFloat(value).toFixed(1)
    when '%.1d%%' then parseFloat(value).toFixed(1) + '%'
    when '%.2d' then parseFloat(value).toFixed(2)
    when '+%.2d'
      value = parseFloat(value)
      result = (if value > 0 then '+' else '')
      result += value.toFixed(2)
    when '(%.2d%%)' then "(#{ parseFloat(value).toFixed(2) }%)"
    when 'mm' then parseFloat(value)/1000000
    else _formatWoTrailingZeros(value)
