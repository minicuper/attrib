exports.downloadBlob = (blob, filename) ->
  link = document.createElement 'a'
  document.body.appendChild link
  link.setAttribute 'href', window.URL.createObjectURL(blob)
  link.setAttribute 'download', filename
  link.setAttribute 'target', '_parent'
  link.click()
  document.body.removeChild link

# Use downloadBlob to data as json file
exports.downloadBlobJson = (data, name = 'data') ->
  name = name + '.json' unless /\.json$/.test(name)
  text = JSON.stringify data
  blob = new Blob [text], type: 'application/json'
  exports.downloadBlob(blob, name)

# Upload file on client and return its text content and file name.
#
# TODO: Remove from dom-tree when Cancel was clicked.
# This can be achieved if you bind on click event after 'change' to
#
#     input.addEventListener 'click', ->
#       removeInput()
#
# but it is unreliable -- when you upload new file it doesn't upload it
# because click already fired and the element removed itself from dom.
#
exports.upload = (cb) ->
  input = document.createElement 'input'
  input.type = 'file'
  input.style.display = 'none'
  document.body.appendChild input
  removed = false

  removeInput = ->
    return if removed
    document.body.removeChild input if input?.parentNode
    removed = true

  input.addEventListener 'change', ->
    file = input.files?[0]
    unless file
      removeInput()
      return cb? 'No file selected'
    name = file.name
    reader = new FileReader()
    reader.onload = =>
      text = reader.result
      removeInput()
      cb? null, text, name
    reader.readAsText file

  # Initiate the click to open the file selection
  input.click()