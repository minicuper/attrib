// Generated by CoffeeScript 1.10.0
(function() {
  var _formatD3, _formatWoTrailingZeros, isNumber;

  _formatWoTrailingZeros = function(n) {
    n = parseFloat(n);
    if (isNaN(n)) {
      return;
    }
    n = n.toFixed(2);
    n = ('' + n).replace(/\d(?=(\d{3})+(\.|$))/g, '$&,');
    n = n.replace(/\.00$/, '');
    return n.replace(/\.(.)0$/, '.$1');
  };

  isNumber = function(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
  };

  _formatD3 = function(value) {
    var d3;
    d3 = require('d3');
    return d3.format('.3s')(value).replace('k', 'K');
  };

  exports.f = function(value, format, empty) {
    var result;
    if (!((value != null) || empty)) {
      return '';
    }
    if (!isNumber(value)) {
      return value;
    }
    switch (format) {
      case 's':
        return _formatD3(value);
      case 'percent':
        return _formatWoTrailingZeros(value * 100) + '%';
      case 'dollar':
        return '$' + _formatWoTrailingZeros(value);
      case '%.1d':
        return parseFloat(value).toFixed(1);
      case '%.1d%%':
        return parseFloat(value).toFixed(1) + '%';
      case '%.2d':
        return parseFloat(value).toFixed(2);
      case '+%.2d':
        value = parseFloat(value);
        result = (value > 0 ? '+' : '');
        return result += value.toFixed(2);
      case '(%.2d%%)':
        return "(" + (parseFloat(value).toFixed(2)) + "%)";
      case 'mm':
        return parseFloat(value) / 1000000;
      default:
        return _formatWoTrailingZeros(value);
    }
  };

}).call(this);
