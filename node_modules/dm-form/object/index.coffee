_ = require 'lodash'

module.exports = class FormObject extends require('../input')
  view: __dirname
  name: 'dm-form:object'

#  _getExtraFields: -> [
#    'order'
#    'properties'
#  ]
  init: ->
    super

#  _changeKey: (oldKey, newKey) ->
#    value = @model.del("properties.#{ oldKey }")
#    @model.setDiff "properties.#{ newKey }", value if value

#  _ensureIds: ->
#    for key, value of @model.get('properties') || {}
#      if value?.id?
#        if key isnt value.id
#          @_changeKey key, value.id
#      else
#        @model.setNull "properties.#{ key }.id", key

#  exists: (value) ->
#    value?

  resolvesDeps: (value = {}, dependsOn, dependsValue) ->
    not dependsOn or
        # dependsValue is value
        (dependsValue? and value[dependsOn] is dependsValue) or
        # dependsValue is array
        (dependsValue? and _.isArray(dependsValue) and
            value[dependsOn] in dependsValue) or
        # dependsValue is not present, check that value[dependsOn] has something
        ((not dependsValue? or
            (_.isString(dependsValue) and dependsValue.trim() is '')) and
            value[dependsOn]? and
            not (_.isString(value[dependsOn]) and value[dependsOn].trim() is ''))

  setVisibleFlag: (name) ->
    @model.setNull "visible.#{ name }", true
    undefined

  clear: (value, name) ->
    return unless @model.get("visible.#{ name }")
    @model.del "visible.#{ name }"
    name = @_sanitizeName(name)
    if value.get(name)?
      console.log '-----> CLEAR - ', name
      value.del(name)
    undefined