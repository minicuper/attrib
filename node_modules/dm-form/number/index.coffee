FormText = require '../text'
util = require 'dm-util/src/numbers'

module.exports = class FormNumber extends FormText
  view: __dirname
  style: __dirname
  name: 'dm-form:number'

  _getExtraFields: ->
    super().concat [
      'min'
      'max'
      'step'
      'units'
      'format'
      'empty'
    ]

  init: ->
    super

  toggleFocus: ->
    focus = @model.get 'focus'
    if focus
      @model.del 'focus'
    else
      @model.set 'focus', true

  checkLimits: ->
    {from, to, value, incorrectValue} = @_getValues()
    error = true if value? && (to? and value > to || from? and value < from)

    if error
      @model.set 'incorrectValue', true
    else if incorrectValue
      @model.del 'incorrectValue'

  _getValues: ->
    from = @getMetaAttribute('min')
    to = @getMetaAttribute('max')
    value = @model.get('_value')
    incorrectValue = @model.get 'incorrectValue'

    value = undefined if value is '' or value is '-'
    value = parseFloat(value)
    value = undefined if isNaN(value)

    {from, to, value, incorrectValue}

  getFormattedValue: (value, format, empty) ->
    util.f(value, format, empty)
