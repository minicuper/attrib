index(bem='Input' attributes='label description')
  view(is='{{ _layout }}' inherit)

pure:
  view.-pure(is='input' extraClass='{{ @class }}' inherit)

columns:(bem='Input')
  .&.-columns.-number(class="{{if @class}}{{@class}}{{/}}{{if errors}}-error{{/}}")
    view(is='inputErrors')
    .&-left
      if @label
        label.&-label(for='{{ unescaped uniqId }}') {{ @label }}
    .&-right
      .&-numberWrapper
        view(is='input' inherit)
        if @units
          span.&-numberUnits {{ @units }}
      if @description
        .&-description {{ @description }}

input:(bem='Input')
  if @readonly
    view(is='input:readonly' inherit)
  else
    view(is='input:edit' inherit)

input:readonly:(bem='Input')
  .&-input.-number.-readonly(class='{{ @extraClass }}')
    | {{ getFormattedValue(_value, @format, @empty) || '&nbsp;' }}

input:edit:(bem='Input')
  .&-incorrectValue(class='{{if incorrectValue && focus}}DMTooltip -top -static{{/}}' data-tooltip='Must be between {{@min}} and {{@max}}')
  input.&-input.-number(class='{{ @extraClass }}'
      id='{{ unescaped uniqId }}'
      type='number'
      value='{{ _value }}'
      step='{{ @step }}'
      min='{{ @min }}'
      max='{{ @max }}'
      disabled='{{ @disabled }}'
      placeholder="{{ @placeholder || '0.00' }}"
      on-focus="toggleFocus(), emit('active')"
      on-keyup='checkLimits()'
      on-blur='toggleFocus()'
      as='input'
  )
