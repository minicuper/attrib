_ = require 'lodash'
util = require 'dm-util'

module.exports = class FormArray extends require('../input')
  view: __dirname
  style: __dirname
  name: 'dm-form:array'

  init: ->
    super
    unless @getMetaAttribute('items')
      console.error "Array meta error: No 'items' provided for array " +
          "'#{ @model.get('name') }'"
    @model.start 'indexes', 'value', (arr) ->
      if _.isArray(arr)
        [0...arr.length]
      else
        []

  add: (index) ->
    if index?
      console.log 'Insert', index
      @model.insert 'value', index, undefined
      @expand index
      @collapse index + 1
    else
      @model.push 'value', undefined
    @_rerender()

  duplicate: (item) ->
    copy = item.getDeepCopy()
    index = item.leaf()
    console.log 'Duplicate', index
    @model.insert 'value', index, copy
    @collapse index + 1
    @_rerender()

  remove: (item) ->
    return unless item
    return unless confirm('Are you sure you want to remove this item?')
    index = item.leaf()
    @collapse index
    item.parent().remove index
    @_rerender()

  expand: (index) ->
    @model.setNull 'expand', []
    @model.set "expand.#{ index }", true

  collapse: (index) ->
    @model.set "expand.#{ index }", false

  toggle: (index) ->
    if @model.get("expand.#{ index }")
      @collapse index
    else
      @expand index

  getName: (item) ->
    item?.name

  getType: (item) ->
    item?.input || item?.type

  getDescription: (item) ->
    item?.description || item?.fullname

  changeOrder:
    get: (value, option) ->
      option is value
    set: (optionSelected, value, option) ->
      return unless optionSelected
      console.log 'Move FROM', value, 'TO', option
      @model.move 'value', value, option
      @_rerender()
      undefined

  hasChecked: (checked = []) ->
    for item in checked
      return true if item
    false

  checkAll: ->
    length = (@model.get('value') || []).length
    for i in [0...length]
      @model.set "checked.#{ i }", true

  uncheckAll: ->
    @model.del 'checked'

  _rerender: ->
    @uncheckAll()
    @model.set 'rerender', !@model.get('rerender')

  removeSelected: ->
    checked = @model.get('checked') || []
    length = (@model.get('value') || []).length
    return if length is 0
    return unless confirm 'Are you sure you want to remove selected items?'
    for i in [(length - 1)..0] when checked[i]
      @model.remove 'value', i
    @_rerender()

  allChecked: (checked = [], length = 0) ->
    return false if length is 0
    for i in [0...length]
      return false unless checked[i]
    true

  _getChecked: ->
    checked = @model.get('checked') || []
    length = (@model.get('value') || []).length
    for i in [0...length] when checked[i]
      @model.getDeepCopy("value.#{ i }")

  copyToClipboard: ->
    copy = @_getChecked()
    @model.set 'clipboard', copy

  pasteFromClipboard: (index) ->
    length = (@model.get('value') || []).length
    if length is 0
      index = 0
    else if not index? or index > length
      index = length
    @model.insert 'value', index, (@model.getDeepCopy('clipboard') || [])
    @_rerender()

  clearClipboard: ->
    @model.del 'clipboard'

  export: ->
    copy = @_getChecked()
    util.file.downloadBlobJson copy

  import: (index) ->
    util.file.upload (err, text, filename) =>
      console.log 'ERROR', err if err
      return if err
      try
        copy = JSON.parse(text)
      catch e
        return alert 'Error importing - ' + e
      console.log 'IMPORT', JSON.stringify(copy, null, '  '), filename

      length = (@model.get('value') || []).length
      if length is 0
        index = 0
      else if not index? or index > length
        index = length

      @model.insert 'value', index, copy
      @_rerender()