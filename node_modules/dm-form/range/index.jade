index(bem='Input')
  view(is='{{ _layout }}' inherit)

pure:
  view.-pure(is='input' extraClass='{{ @class }}' inherit)

columns:(bem='Input')
  .&.-columns.-range(class="{{if @class}}{{@class}}{{/}}{{if errors}}-error{{/}}")
    view(is='inputErrors')
    .&-left
      if @label
        label.&-label {{ @label }}
    .&-right
      view(is='input' inherit)
      if @description
        .&-description {{ @description }}

input:(bem='Input')
  if @readonly
    view(is='input:readonly' inherit)
  else
    view(is='input:edit' inherit)

input:readonly:(bem='Input')
  .&-input.-range.-readonly(class='{{ @extraClass }}')
    | {{ _value || '&nbsp;' }}

input:edit:(bem='Input')
  if @options
    .&-options
      each @options as #option
        .&-item
          | {{ #option.name || #option }}

  .InputRange.&-input.-range(class='{{if @disabled}}-disabled{{/}} {{if @options}}-withOptions{{/}}')
    input(class='{{ @extraClass }}'
        type='range'
        value='{{ _value }}'
        step='{{ @step }}'
        disabled='{{ @disabled }}'
        min='{{ @min }}'
        max='{{ @max }}'
        on-mouseup='lazySet()'
        on-focus="emit('active')"
        as='input'
    )
    .InputRange-tooltip(style='left:calc({{offsetLeft}}% + ({{circleWidth/2}}px - {{offsetCenterCircle}}px) - {{tooltipWidth/2}}px)' as='tooltip')
      | {{ formatTooltip(_value, @measure) }}
    .InputRange-background
      .InputRange-backgroundLower(style='flex:{{ _value - @min }}')
      .InputRange-backgroundUpper(style='flex:{{ @max - _value }}')
    .InputRange-rangeValue {{ formatTooltip(_value, @measure) }}
